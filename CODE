// ------------------ ARDUINO CODE ------------------
// Required Libraries
#include <SPI.h>
#include <MFRC522.h>
#include <LiquidCrystal.h>

// Pin Definitions
#define SS_PIN 10
#define RST_PIN 9
#define ADD_BUTTON 2
#define REMOVE_BUTTON 3
#define TOTAL_BUTTON 4

// RFID and LCD setup
MFRC522 mfrc522(SS_PIN, RST_PIN);
LiquidCrystal lcd(7, 6, 5, 4, 3, 2);

// Product Structure
struct Product {
  String name;
  int price;
};

// Products Database
Product products[] = {
  {"Milk", 30},
  {"Bread", 25},
  {"Eggs", 60}
};

// Known UIDs for products
byte knownUIDs[][4] = {
  {0xA1, 0xB2, 0xC3, 0xD4},  // Milk
  {0x12, 0x34, 0x56, 0x78},  // Bread
  {0xAA, 0xBB, 0xCC, 0xDD}   // Eggs
};

int cartTotal = 0;
String scannedItems = "";
int cartIndexList[10]; // to store index of added items
int cartCount = 0;

void setup() {
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();
  lcd.begin(16, 2);
  pinMode(ADD_BUTTON, INPUT_PULLUP);
  pinMode(REMOVE_BUTTON, INPUT_PULLUP);
  pinMode(TOTAL_BUTTON, INPUT_PULLUP);
  welcomeMessage();
}

void loop() {
  if (digitalRead(ADD_BUTTON) == LOW) {
    scanProduct(false);
  }

  if (digitalRead(REMOVE_BUTTON) == LOW) {
    lcd.clear();
    lcd.print("Scan item to");
    lcd.setCursor(0, 1);
    lcd.print("remove...");
    delay(1000);
    scanProduct(true);
  }

  if (digitalRead(TOTAL_BUTTON) == LOW) {
    lcd.clear();
    lcd.print("Total Sent to");
    lcd.setCursor(0, 1);
    lcd.print("OLED...");
    delay(1000);
    Serial.print("FINAL_TOTAL:");
    Serial.println(cartTotal);
    Serial.print("ITEMS:");
    Serial.println(scannedItems);
    welcomeMessage();
  }
}

void welcomeMessage() {
  lcd.clear();
  lcd.print("Welcome to");
  lcd.setCursor(0, 1);
  lcd.print("Smart Cart");
  delay(2000);
  lcd.clear();
  lcd.print("Press Add or");
  lcd.setCursor(0, 1);
  lcd.print("Remove...");
}

void scanProduct(bool isRemove) {
  lcd.clear();
  lcd.print("Scan your");
  lcd.setCursor(0, 1);
  lcd.print(isRemove ? "item to remove" : "products...");

  while (!mfrc522.PICC_IsNewCardPresent()) {}
  if (!mfrc522.PICC_ReadCardSerial()) return;

  for (int i = 0; i < sizeof(knownUIDs) / sizeof(knownUIDs[0]); i++) {
    bool match = true;
    for (int j = 0; j < 4; j++) {
      if (mfrc522.uid.uidByte[j] != knownUIDs[i][j]) {
        match = false;
        break;
      }
    }

    if (match) {
      if (isRemove) {
        bool found = false;
        for (int k = 0; k < cartCount; k++) {
          if (cartIndexList[k] == i) {
            found = true;
            for (int l = k; l < cartCount - 1; l++) cartIndexList[l] = cartIndexList[l + 1];
            cartCount--;
            cartTotal -= products[i].price;
            scannedItems.replace(products[i].name + ",", "");
            lcd.clear();
            lcd.print("Removed:");
            lcd.setCursor(0, 1);
            lcd.print(products[i].name);
            Serial.print("REMOVE:");
            Serial.println(cartTotal);
            delay(1500);
            break;
          }
        }
        if (!found) {
          lcd.clear();
          lcd.print("Item not in");
          lcd.setCursor(0, 1);
          lcd.print("cart");
          delay(1500);
        }
      } else {
        cartTotal += products[i].price;
        scannedItems += products[i].name + ",";
        cartIndexList[cartCount++] = i;
        lcd.clear();
        lcd.print(products[i].name);
        lcd.setCursor(0, 1);
        lcd.print("Rs ");
        lcd.print(products[i].price);
        Serial.print("TOTAL:");
        Serial.println(cartTotal);
        delay(1500);
        lcd.clear();
        lcd.print("Scan next or");
        lcd.setCursor(0, 1);
        lcd.print("Press Total");
        delay(1500);
      }
      break;
    }
  }

  mfrc522.PICC_HaltA();
}
